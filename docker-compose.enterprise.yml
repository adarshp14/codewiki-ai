# Docker Compose for Enterprise Self-Hosted Deployment
# Usage: docker-compose -f docker-compose.enterprise.yml up -d

version: '3.8'

services:
  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: codewiki-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_APP_ENV=enterprise
      - NEXT_PUBLIC_APP_NAME=CodeWiki AI Enterprise
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - codewiki-network

  # FastAPI Backend  
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: codewiki-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=.
      - PORT=8000
      - CORS_ORIGINS=http://localhost:3000,https://your-domain.com
      - SECURITY_HEADERS_ENABLED=true
      - RATE_LIMITING_ENABLED=true
      - OLLAMA_HOST=http://ollama:11434
      - OLLAMA_ENABLED=true
      # Load from .env.enterprise file
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
      # Enterprise features
      - ENTERPRISE_MODE=true
      - AUTH_ENABLED=${AUTH_ENABLED:-false}
      - LDAP_URL=${LDAP_URL:-}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@company.com}
    depends_on:
      - ollama
      - database
    restart: unless-stopped
    networks:
      - codewiki-network
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads

  # Ollama Local AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: codewiki-ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_ORIGINS=http://localhost:8000,https://your-domain.com
    volumes:
      - ollama-data:/root/.ollama
    restart: unless-stopped
    networks:
      - codewiki-network
    # GPU support (uncomment if you have NVIDIA GPU)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # PostgreSQL Database (Optional)
  database:
    image: postgres:15-alpine
    container_name: codewiki-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=codewiki_ai
      - POSTGRES_USER=codewiki_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-codewiki_secure_password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - codewiki-network

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: codewiki-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - codewiki-network
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: codewiki-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - codewiki-network

  # Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: codewiki-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - codewiki-network

  grafana:
    image: grafana/grafana:latest
    container_name: codewiki-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - codewiki-network

volumes:
  ollama-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  codewiki-network:
    driver: bridge